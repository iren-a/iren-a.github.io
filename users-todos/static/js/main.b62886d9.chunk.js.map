{"version":3,"sources":["actions/processUsers.js","reducers/processUsers.js","actions/processTodos.js","reducers/processTodos.js","reducers/rootReducer.js","api.js","middlewares/getListMiddleware.js","components/User.js","selectors/getUsersSelectors.js","components/UserList.js","components/Todo.js","selectors/getTodosSelectors.js","components/UserTodos.js","components/TodoForm.js","components/App.js","store.js","index.js"],"names":["createActions","getUsersRequest","getUsersSuccess","getUsersFailure","isLoaded","handleActions","_handleActions","Object","defineProperty","toString","users","state","action","payload","error","combineReducers","getTodosRequest","getTodosSuccess","getTodosFailure","removeTodo","removeTodoSuccess","removeTodoFailure","addTodo","addTodoSuccess","addTodoFailure","editTodo","editTodoSuccess","editTodoFailure","processTodos_handleActions","isProcessedTodo","_handleActions2","todos","_handleActions3","todoId","filter","todo","id","_handleActions4","processUsers","processTodos","getList","query","fetch","concat","method","mode","then","response","json","getListMiddleware","store","next","entity","type","entities","dispatch","catch","newObject","body","JSON","stringify","headers","Content-type","add","edit","User","react_default","a","createElement","className","Link","to","this","props","user","name","email","phone","React","Component","getUsers","UserList","message","map","User_User","key","mapDispatchToProps","connect","getUsersLoading","getUsersError","Todo","_remove","evt","preventDefault","window","confirm","_this","title","completed","onClick","userId","getTodos","UserTodos","find","match","params","username","website","components_Todo","getTodosLoading","getTodosError","TodoForm","_addTodo","_title","value","_completed","checked","_editTodo","_cancel","history","goBack","_this2","onSubmit","htmlFor","defaultValue","required","ref","input","defaultChecked","getTodosProcessed","createStore","rootReducer","compose","applyMiddleware","devToolsExtension","__REDUX_DEVTOOLS_EXTENSION__","f","App","es","BrowserRouter","Switch","Route","exact","path","component","ReactDOM","render","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b62886d9.chunk.js","sourcesContent":["import {createActions} from 'redux-actions';\r\n\r\nconst {getUsersRequest, getUsersSuccess, getUsersFailure} = createActions(\r\n    'GET_USERS_REQUEST',\r\n    'GET_USERS_SUCCESS',\r\n    'GET_USERS_FAILURE'\r\n);\r\n\r\nexport {getUsersRequest, getUsersSuccess, getUsersFailure};","import {handleActions} from 'redux-actions';\r\nimport {getUsersRequest, getUsersSuccess, getUsersFailure} from './../actions/processUsers';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst isLoaded = handleActions(\r\n    {\r\n        [getUsersRequest.toString()]: () => false,\r\n        [getUsersSuccess.toString()]: () => true,\r\n        [getUsersFailure.toString()]: () => false,\r\n    },\r\n    false\r\n);\r\n\r\nconst users = handleActions(\r\n    {\r\n        [getUsersSuccess.toString()]: (state, action) => action.payload,\r\n    },\r\n    []\r\n);\r\n\r\n\r\nconst error = handleActions(\r\n    {\r\n        [getUsersFailure.toString()]: (state, action) => action.payload,\r\n    },\r\n    null\r\n);\r\n\r\n\r\nexport default combineReducers({\r\n    isLoaded,\r\n    users,\r\n    error,\r\n});","import {createActions} from 'redux-actions';\r\n\r\nconst {getTodosRequest, getTodosSuccess, getTodosFailure} = createActions(\r\n    'GET_TODOS_REQUEST',\r\n    'GET_TODOS_SUCCESS',\r\n    'GET_TODOS_FAILURE'\r\n);\r\n\r\nconst {removeTodo, removeTodoSuccess, removeTodoFailure} = createActions(\r\n    'REMOVE_TODO',\r\n    'REMOVE_TODO_SUCCESS',\r\n    'REMOVE_TODO_FAILURE'\r\n);\r\n\r\nconst {addTodo, addTodoSuccess, addTodoFailure} = createActions(\r\n    'ADD_TODO',\r\n    'ADD_TODO_SUCCESS',\r\n    'ADD_TODO_FAILURE'\r\n);\r\n\r\nconst {editTodo, editTodoSuccess, editTodoFailure} = createActions(\r\n    'EDIT_TODO',\r\n    'EDIT_TODO_SUCCESS',\r\n    'EDIT_TODO_FAILURE'\r\n);\r\n\r\nexport {\r\n    getTodosRequest,\r\n    getTodosSuccess,\r\n    getTodosFailure,\r\n    removeTodo,\r\n    removeTodoSuccess,\r\n    removeTodoFailure,\r\n    addTodo,\r\n    addTodoSuccess,\r\n    addTodoFailure,\r\n    editTodo,\r\n    editTodoSuccess,\r\n    editTodoFailure\r\n};","import {handleActions} from 'redux-actions';\r\nimport {getTodosRequest, getTodosSuccess, getTodosFailure} from './../actions/processTodos';\r\nimport {removeTodo, removeTodoSuccess, removeTodoFailure} from './../actions/processTodos';\r\nimport {addTodo, addTodoSuccess, addTodoFailure} from './../actions/processTodos';\r\nimport {editTodo, editTodoSuccess, editTodoFailure} from './../actions/processTodos';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst isLoaded = handleActions(\r\n    {\r\n        [getTodosRequest.toString()]: () => false,\r\n        [getTodosSuccess.toString()]: () => true,\r\n        [getTodosFailure.toString()]: () => false\r\n    },\r\n    false\r\n);\r\n\r\nconst isProcessedTodo = handleActions(\r\n    {\r\n        [editTodo.toString()]: () => false,\r\n        [editTodoSuccess.toString()]: () => true,\r\n        [editTodoFailure.toString()]: () => false,\r\n        [addTodo.toString()]: () => false,\r\n        [addTodoSuccess.toString()]: () => true,\r\n        [addTodoFailure.toString()]: () => false\r\n    },\r\n    false\r\n);\r\n\r\n\r\nconst todos = handleActions(\r\n    {\r\n        [getTodosSuccess.toString()]: (state, action) => action.payload,\r\n        [removeTodoSuccess.toString()]: (state, action) => {\r\n            const todoId = action.payload;\r\n            return state.filter((todo) => todo.id !== todoId);\r\n        }\r\n    },\r\n    []\r\n);\r\n\r\n\r\nconst error = handleActions(\r\n    {\r\n        [getTodosFailure.toString()]: (state, action) => action.payload,\r\n        [removeTodoFailure.toString()]: (state, action) => action.payload,\r\n        [addTodoFailure.toString()]: (state, action) => action.payload,\r\n        [editTodoFailure.toString()]: (state, action) => action.payload,\r\n    },\r\n    null\r\n);\r\n\r\n\r\nexport default combineReducers({\r\n    isLoaded,\r\n    todos,\r\n    error,\r\n    isProcessedTodo\r\n});","import {combineReducers} from 'redux';\r\nimport processUsers from './processUsers';\r\nimport processTodos from './processTodos';\r\n\r\nexport default combineReducers({\r\n    processUsers,\r\n    processTodos\r\n});","const getList = (query) =>\r\n    fetch(`http://localhost:3000/${query}`, {\r\n        method: 'GET',\r\n        mode: 'cors',\r\n    })\r\n        .then((response) => response.json());\r\n\r\nconst remove = (entity, id) =>\r\n    fetch(`http://localhost:3000/${entity}/${id}`, {\r\n        method: 'DELETE',\r\n        mode: 'cors',\r\n    });\r\n\r\nconst add = (entity, newObject) =>\r\n    fetch(`http://localhost:3000/${entity}`, {\r\n        method: 'POST',\r\n        mode: 'cors',\r\n        body: JSON.stringify(newObject),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json());\r\n\r\nconst edit = (entity, newObject) =>\r\n    fetch(`http://localhost:3000/${entity}`, {\r\n        method: 'PUT',\r\n        mode: 'cors',\r\n        body: JSON.stringify(newObject),\r\n        headers: {\r\n            \"Content-type\": \"application/json; charset=UTF-8\"\r\n        }\r\n    })\r\n        .then(response => response.json());\r\n\r\nexport {getList, remove, add, edit};","import {getUsersRequest, getUsersSuccess, getUsersFailure} from './../actions/processUsers';\r\nimport {getTodosRequest, getTodosSuccess, getTodosFailure} from './../actions/processTodos';\r\nimport {removeTodo, removeTodoSuccess, removeTodoFailure} from './../actions/processTodos';\r\nimport {addTodo, addTodoSuccess, addTodoFailure} from './../actions/processTodos';\r\nimport {editTodo, editTodoSuccess, editTodoFailure} from './../actions/processTodos';\r\n\r\nimport {getList, remove, add, edit} from './../api';\r\n\r\nexport default (store) => (next) => (action) => {\r\n    if (action.type === getUsersRequest.toString()) {\r\n        getList(action.payload)\r\n            .then((entities) => {\r\n                store.dispatch(getUsersSuccess(entities));\r\n            })\r\n            .catch((error) => {\r\n                store.dispatch(getUsersFailure(error));\r\n            });\r\n    }\r\n    if (action.type === getTodosRequest.toString()) {\r\n        getList(action.payload)\r\n            .then((entities) => {\r\n                store.dispatch(getTodosSuccess(entities));\r\n            })\r\n            .catch((error) => {\r\n                store.dispatch(getTodosFailure(error));\r\n            });\r\n    }\r\n    if (action.type === removeTodo.toString()) {\r\n        remove('todos', action.payload)\r\n            .then((entities) => {\r\n                store.dispatch(removeTodoSuccess(action.payload));\r\n            })\r\n            .catch((error) => {\r\n                store.dispatch(removeTodoFailure(error));\r\n            });\r\n    }\r\n    if (action.type === addTodo.toString()) {\r\n        add('todos', action.payload)\r\n            .then((entities) => {\r\n                store.dispatch(addTodoSuccess(action.payload));\r\n            })\r\n            .catch((error) => {\r\n                store.dispatch(addTodoFailure(error));\r\n            });\r\n    }\r\n    if (action.type === editTodo.toString()) {\r\n        edit(`todos/${action.payload.id}`, action.payload)\r\n            .then((entities) => {\r\n                store.dispatch(editTodoSuccess(action.payload));\r\n            })\r\n            .catch((error) => {\r\n                store.dispatch(editTodoFailure(error));\r\n            });\r\n    }\r\n    return next(action);\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class User extends React.Component {\r\n    render() {\r\n        return(\r\n            <li className='user-list__user'>\r\n                <Link className='user-list__link' to={`/user/${this.props.user.id}/todos`}>\r\n                    <div className='user-list__name'>{this.props.user.name}</div>\r\n                    <div className='user-list__email'>{this.props.user.email}</div>\r\n                    <div className='user-list__phone'>{this.props.user.phone}</div>\r\n                </Link>\r\n            </li>\r\n\r\n        )\r\n\r\n    }\r\n}","export const getUsersLoading = (state) => state.processUsers.isLoaded;\r\nexport const getUsers = (state) => state.processUsers.users;\r\nexport const getUsersError = (state) => state.processUsers.error;","import React from 'react';\r\nimport User from './User';\r\nimport {connect} from 'react-redux';\r\nimport {getUsersLoading, getUsers, getUsersError} from './../selectors/getUsersSelectors';\r\nimport {getUsersRequest} from './../actions/processUsers';\r\n\r\nclass UserList extends React.Component {\r\n    render() {\r\n        if (this.props.error) {\r\n            return (\r\n                <div>Error: {this.props.error.message}</div>\r\n            );\r\n        } else if (!this.props.isLoaded) {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        } else {\r\n            return(\r\n                <div className='user-list'>\r\n                    <h1 className='user-list__header'>User list</h1>\r\n                    <ul className='user-list__users'>\r\n                        {this.props.users.map(user => (\r\n                            <User user={user} key={user.id}/>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersRequest('users');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoaded: getUsersLoading(state),\r\n    users: getUsers(state),\r\n    error: getUsersError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getUsersRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserList);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {removeTodo} from './../actions/processTodos';\r\n\r\nclass Todo extends React.Component {\r\n    _remove = (evt) => {\r\n        evt.preventDefault();\r\n        if (window.confirm('Do you want to delete the todo?')) {\r\n            this.props.removeTodo(this.props.todo.id);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <li className='todo'>\r\n                <div className='todo__id'>{this.props.todo.id}</div>\r\n                <div className='todo__tilte'>{this.props.todo.title}</div>\r\n                <div className='todo__completed'>{this.props.todo.completed ? 'compleded' : 'in process'}</div>\r\n                <button className='todo__delete btn' onClick={this._remove}>Delete</button>\r\n                <Link className='todo__edit btn' to={`/user/${this.props.todo.userId}/todo/${this.props.todo.id}/todo-form`}>\r\n                    <div>Edit</div>\r\n                </Link>\r\n\r\n            </li>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeTodo\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Todo);","export const getTodosLoading = (state) => state.processTodos.isLoaded;\r\nexport const getTodosProcessed = (state) => state.processTodos.isProcessedTodo;\r\nexport const getTodos = (state) => state.processTodos.todos;\r\nexport const getTodosError = (state) => state.processTodos.error;\r\n","import React from 'react';\r\nimport Todo from './Todo';\r\nimport {connect} from 'react-redux';\r\nimport {getTodosLoading, getTodos, getTodosError} from './../selectors/getTodosSelectors';\r\nimport {getUsers} from './../selectors/getUsersSelectors';\r\nimport {getTodosRequest} from './../actions/processTodos';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nclass UserTodos extends React.Component {\r\n    render() {\r\n        if (this.props.error) {\r\n            return (\r\n                <div>Error: {this.props.error.message}</div>\r\n            );\r\n        } else if (!this.props.isLoaded) {\r\n            return (\r\n                <div>Loading...</div>\r\n            );\r\n        } else {\r\n            const user = this.props.users.find((user) => user.id === +this.props.match.params.userId);\r\n\r\n            return(\r\n                <div className='user-todos'>\r\n                    <Link className='btn' to='/'>\r\n                        <div>Back to all users</div>\r\n                    </Link>\r\n                    <h1 className='user-todos__header'>User todos</h1>\r\n                    <Link className='btn' to={`/user/${this.props.match.params.userId}/todo-form`}>\r\n                        <div className='user-todo__add'>Add todo</div>\r\n                    </Link>\r\n                    <div className='user-todos__wrapper'>\r\n                        <div className='user-todos__user-info'>\r\n                            <div>{user.name}</div>\r\n                            <div>{user.username}</div>\r\n                            <div>{user.email}</div>\r\n                            <div>{user.phone}</div>\r\n                            <div>{user.website}</div>\r\n                        </div>\r\n                        <div className='user-todos__list'>\r\n                            <ul>\r\n                                {this.props.todos.map(todo => (\r\n                                    <Todo todo={todo} key={todo.id}/>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getTodosRequest(`users/${this.props.match.params.userId}/todos`);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoaded: getTodosLoading(state),\r\n    todos: getTodos(state),\r\n    users: getUsers(state),\r\n    error: getTodosError(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    getTodosRequest\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserTodos);","import React from 'react';\r\nimport {addTodo, editTodo} from './../actions/processTodos';\r\nimport {connect} from 'react-redux';\r\nimport {getTodos, getTodosProcessed} from './../selectors/getTodosSelectors';\r\n\r\nclass TodoForm extends React.Component {\r\n    _addTodo = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        this.props.addTodo({\r\n            userId: +this.props.match.params.userId,\r\n            title: this._title.value,\r\n            completed: this._completed.checked\r\n        });\r\n    };\r\n\r\n    _editTodo = (evt) => {\r\n        evt.preventDefault();\r\n\r\n        this.props.editTodo({\r\n            userId: +this.props.match.params.userId,\r\n            id: +this.props.match.params.todoId,\r\n            title: this._title.value,\r\n            completed: this._completed.checked\r\n        });\r\n    };\r\n\r\n    _cancel = (evt) => {\r\n        evt.preventDefault();\r\n        this.props.history.goBack();\r\n    };\r\n\r\n    render() {\r\n        const emptyTodo = {\r\n            title: '',\r\n            completed: false\r\n        };\r\n\r\n        const todo = this.props.todos.find((todo) => todo.id === +this.props.match.params.todoId) || emptyTodo;\r\n\r\n        return(\r\n            <form className='todo-form' onSubmit={this.props.match.params.todoId ? this._editTodo : this._addTodo}>\r\n                <div className='todo-form__fieldset'>\r\n                    <label className='todo-form__label' htmlFor=\"id\">Title</label>\r\n                    <input type=\"text\" id=\"title\" defaultValue={todo.title} required ref={(input) => this._title = input}/>\r\n                </div>\r\n                <div className='todo-form__fieldset'>\r\n                    <label className='todo-form__label' htmlFor=\"completed\">Completed</label>\r\n                    {\r\n                        todo.completed ?\r\n                            <input type=\"checkbox\" name=\"status-toggle\" value=\"status\" id=\"completed\" defaultChecked ref={(input) => this._completed = input}/> :\r\n                            <input type=\"checkbox\" name=\"status-toggle\" value=\"status\" id=\"completed\" ref={(input) => this._completed = input}/>\r\n                    }\r\n                </div>\r\n                <div className='todo-form__button-container'>\r\n                    <button className='btn' type=\"submit\">Save</button>\r\n                    <button className='btn' type=\"button\" onClick={this._cancel}>Cancel</button>\r\n                </div>\r\n            </form>\r\n\r\n        )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isProcessedTodo) {\r\n            this.props.history.goBack();\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    todos: getTodos(state),\r\n    isProcessedTodo: getTodosProcessed(state)\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addTodo,\r\n    editTodo\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoForm);","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport getStore from './../store';\r\nimport {BrowserRouter, Switch, Route} from 'react-router-dom';\r\nimport UserList from './UserList';\r\nimport UserTodos from './UserTodos';\r\nimport TodoForm from './TodoForm';\r\n\r\nconst store = getStore();\r\n\r\nexport default class App extends React.Component {\r\n    render() {\r\n        return(\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <Switch>\r\n                        <Route exact path='/' component={UserList}/>\r\n                        <Route path='/user/:userId/todos' component={UserTodos}/>\r\n                        <Route path='/user/:userId/todo-form' component={TodoForm}/>\r\n                        <Route path='/user/:userId/todo/:todoId/todo-form' component={TodoForm}/>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\nimport getListMiddleware from './middlewares/getListMiddleware';\r\n\r\nexport default () =>\r\n    createStore(\r\n        rootReducer,\r\n        compose(\r\n            applyMiddleware(getListMiddleware),\r\n            window.devToolsExtension ? window.__REDUX_DEVTOOLS_EXTENSION__() : (f) => f\r\n        )\r\n    );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}